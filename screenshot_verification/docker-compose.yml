version: '3.8'

services:
  # 主应用服务
  screenshot-verification:
    build: .
    container_name: screenshot-verification-api
    ports:
      - "8000:8000"
    environment:
      - DEBUG=false
      - LOG_LEVEL=INFO
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=sqlite:///./verification.db
    volumes:
      - ./uploads:/app/uploads
      - ./temp:/app/temp
      - ./models:/app/models
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - screenshot-network

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: screenshot-verification-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - screenshot-network

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: screenshot-verification-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - screenshot-verification
    restart: unless-stopped
    networks:
      - screenshot-network

  # Prometheus监控（可选）
  prometheus:
    image: prom/prometheus:latest
    container_name: screenshot-verification-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - screenshot-network

  # Grafana监控面板（可选）
  grafana:
    image: grafana/grafana:latest
    container_name: screenshot-verification-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - screenshot-network

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  screenshot-network:
    driver: bridge