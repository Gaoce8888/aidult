version: '3.8'

services:
  # Screenshot Authenticity AI API 服务
  screenshot-ai:
    build: .
    container_name: screenshot-authenticity-ai
    ports:
      - "8000:8000"  # API端口
      - "8001:8001"  # 监控端口
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=8000
      - USE_GPU=false  # 在Docker中默认使用CPU
      - LOG_LEVEL=INFO
    volumes:
      - ./models:/app/models          # 模型文件
      - ./logs:/app/logs              # 日志文件
      - ./data:/app/data              # 数据文件
      - ./temp:/app/temp              # 临时文件
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
    networks:
      - screenshot-ai-network

  # Redis 缓存服务 (可选)
  redis:
    image: redis:7-alpine
    container_name: screenshot-ai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - screenshot-ai-network

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: screenshot-ai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL证书目录
    depends_on:
      - screenshot-ai
    restart: unless-stopped
    networks:
      - screenshot-ai-network

  # Prometheus 监控 (可选)
  prometheus:
    image: prom/prometheus:latest
    container_name: screenshot-ai-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - screenshot-ai-network

  # Grafana 可视化 (可选)
  grafana:
    image: grafana/grafana:latest
    container_name: screenshot-ai-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - screenshot-ai-network

# 数据卷
volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

# 网络
networks:
  screenshot-ai-network:
    driver: bridge

---
# 开发环境配置
# 使用方法: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

# docker-compose.dev.yml 内容:
# version: '3.8'
# services:
#   screenshot-ai:
#     environment:
#       - ENVIRONMENT=development
#       - DEBUG=true
#       - LOG_LEVEL=DEBUG
#     volumes:
#       - .:/app  # 开发时挂载整个项目目录
#     ports:
#       - "8000:8000"
#       - "8001:8001"